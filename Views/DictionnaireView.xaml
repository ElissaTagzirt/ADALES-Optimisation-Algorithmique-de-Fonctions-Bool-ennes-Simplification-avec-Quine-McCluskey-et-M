<UserControl x:Class="APPLICATION.Views.DictionnaireView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:APPLICATION.Views" xmlns:components="clr-namespace:APPLICATION.Components"
             mc:Ignorable="d" 
             xmlns:fa ="http://schemas.fontawesome.io/icons/"

             d:DesignHeight="450" d:DesignWidth="800">

    <Grid Background="{DynamicResource BackgroundBrush}">
        <Grid.ColumnDefinitions >
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="30" />
            <ColumnDefinition Width="30" />
            <ColumnDefinition Width="30" />

        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="150"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel  Grid.Row="1" Grid.ColumnSpan="5" Grid.RowSpan="7" Margin="5,0,10,10">
            <StackPanel.Effect>
                <BlurEffect Radius="20"  />
            </StackPanel.Effect>

        </StackPanel>
        <ScrollViewer  Grid.Column ="1" Grid.Row="1" Grid.RowSpan="5" Grid.ColumnSpan="2" VerticalScrollBarVisibility="Auto">
            <StackPanel Grid.Column="2" Grid.Row="2"  >
                <Label>
                    <StackPanel Orientation="Horizontal">
                        <fa:ImageAwesome  Foreground="{DynamicResource IconBrush}" Icon="Book"  Width="40" Margin="5"/>
                        <AccessText Foreground="{DynamicResource TextBrush}" FontSize="40" Text="Dictionnaire" ></AccessText>

                    </StackPanel>
                </Label>

                <TextBlock Foreground="{DynamicResource TextBrush}" FontSize="20" FontFamily="{StaticResource pt-serif.bold}"><LineBreak/>  QMC</TextBlock>
                <TextBlock Foreground="{DynamicResource TextBrush}" TextWrapping="Wrap" FontSize="13">La simplification a base de la méthode de Quine-McCluskey est l'une des méthodes adaptées pour la minimisation des expressions et fonctions logiques et classée parmi les plus utiliser.
                   On sait tous qu'une table de Karnaugh permet de simplifier une fonction de 2 à 6 variables maximum. Au-delà, Quine McClusky prend le relais et peut aller jusqu'à 16 variables, et elle est considérée comme méthode destiné à utilisation logicielle grâce à son aspect algorithmique. Pour plus d'informations veuillez consulter le site suivant: 
              <Hyperlink RequestNavigate="Hyperlink_RequestNavigate" NavigateUri="https://fr.wikipedia.org/wiki/Méthode_de_Quine-Mc_Cluskey#:~:text=La%20méthode%20de%20Quine-McCluskey,McCluskey.">Algorithme de QMC  <Hyperlink.ToolTip > <TextBlock Text="Lire la suite ..." /> </Hyperlink.ToolTip></Hyperlink>


                </TextBlock>
                <TextBlock Foreground="{DynamicResource TextBrush}" FontSize="20" FontFamily="{StaticResource pt-serif.bold}" > <LineBreak/> Petrick</TextBlock>
                <TextBlock Foreground="{DynamicResource TextBrush}" TextWrapping="Wrap" FontSize="13">
                    Il existe aussi la methode de Petrick pour la simplification des circuits complexes.
                    En algebre booleenne, la methode de Petrick, ou methode de Branch and Bound est une technique décrite pour déterminer toutes les solutions minimales de somme de produits à partir d’un tableau d’implicants premiers.
                    C’est vrai que cette methode est fastidieuse pour les grandes graphiques, mais avec l’utilisation d’un ordinateur elle est devenue une tache simple et facile à mettre en œuvre.Pour plus d'informations consulter le site suivant:
                    <Hyperlink RequestNavigate="Hyperlink_RequestNavigate" NavigateUri="https://boowiki.info/art/logique-mathematique/methode-petrick.html">Algorithme de Petrick <Hyperlink.ToolTip > <TextBlock Text="Lire la suite ..." /> </Hyperlink.ToolTip> </Hyperlink>

                </TextBlock>
                <TextBlock Foreground="{DynamicResource TextBrush}" FontSize="20" FontFamily="{StaticResource pt-serif.bold}"><LineBreak/> Syntaxe</TextBlock>
                <TextBlock Foreground="{DynamicResource TextBrush}" TextWrapping="Wrap" FontSize="13" >
                           Veuillez respecter la Syntaxe suivante quand vous introduisez votre expression logique: 
                    
                    le OU logique : "+" ;
                    
                    le Non logique :"/" ;
                    
                    Les parenthèses : "()" ; 
                    
                    Le ET logique :  ;

                    
                 <LineBreak />
                </TextBlock>
            </StackPanel>
        </ScrollViewer>


    </Grid>

</UserControl>
